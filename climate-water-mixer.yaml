esphome:
  name: cativoclimate #climate-water-mixer
  platform: ESP32
  board: m5stack-atom

substitutions:
  # ----- device name variables -----
  name: cativoclimate

# Enable logging
logger:
  level: DEBUG
  logs:
    dallas.sensor: WARN
    sensor: WARN

# Enable Home Assistant API
api:

ota:
  password: "a814c1eef16fd333cb984712c8120091"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 10
  manual_ip:
    static_ip: 192.168.33.91
    gateway: 192.168.33.1
    subnet: 255.255.255.0
    dns1: 192.168.33.5
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} Fallback Hotspot"
    password: "I5rz05a1WP9F"


captive_portal:

web_server:
  port: 80
  version: 2

i2c:
  - id: bus_a
    sda: GPIO22
    scl: GPIO23
    scan: false

pcf8574:
  - id: io_hub
    address: 0x20
    pcf8575: False

dallas:
  - pin: GPIO19
    id: dallas_1
    update_interval: 5s


output:
  - platform: mcp4725 #Mixer DAC Output
    id: ${name}_mixer_output
    address: 0x60
    max_power: 0.50 #Due to problems with 5v levels, had to limit output to 50% and amplify it after
    inverted: False

switch:
  - platform: restart
    id: "${name}_restart"
    name: "Restart ${name}"


sensor:
  - platform: dallas
    address: 0xef3c7d0457867428 #8
    name: "${name} Water Inlet Temperature"
    id: "${name}_water_inlet_temp"
    dallas_id: dallas_1
    icon: mdi:thermometer-water
    # internal: True #It is shown on Climate
  - platform: dallas
    address: 0x863cf70457d39e28 #9
    name: "${name} Water Source Temperature"
    id: "${name}_water_source_temp"
    dallas_id: dallas_1
    icon: mdi:thermometer-water
###----------------------------------------Not necessary ----------------
  - platform: pid
    name: "${name} Mixer Source Percentage"
    type: HEAT
    climate_id: ${name}_mixer_controller
  - platform: pid
    name: "${name} Mixer Result"
    type: RESULT
    climate_id: ${name}_mixer_controller
  - platform: pid
    name: "${name} Mixer Error"
    type: ERROR
    climate_id: ${name}_mixer_controller
  - platform: pid
    name: "${name} Mixer PROPORTIONAL"
    type: PROPORTIONAL
    climate_id: ${name}_mixer_controller
  - platform: pid
    name: "${name} Mixer INTEGRAL"
    type: INTEGRAL
    climate_id: ${name}_mixer_controller
  - platform: pid
    name: "${name} Mixer DERIVATIVE"
    type: DERIVATIVE
    climate_id: ${name}_mixer_controller

  - platform: uptime
    name: "${name} Uptime Seconds"
    id: ${name}_uptime_seconds
    update_interval: 60s
    disabled_by_default: True

text_sensor:
  - platform: template
    name: "${name} Uptime"
    id: ${name}_uptime_human
    lambda: |-
      uint32_t dur = id(${name}_uptime_seconds).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 60s
    on_value:
      then:
        - logger.log:
            format: "------------ Uptime is %s -------------"
            args: ["id(${name}_uptime_human).state.c_str()"]



climate:
  - platform: pid
    name: ${name} mixer controller
    id: ${name}_mixer_controller
    sensor: "${name}_water_inlet_temp"
    default_target_temperature: 32.0
    heat_output: ${name}_mixer_output
    visual:
      min_temperature: 10
      max_temperature: 40
      temperature_step: 0.5
    control_parameters:
      kp: 0.0691
      ki: 0.0045
      kd: 0.6646
      min_integral: -0.75
      max_integral: 0.75  # Reduce overshoot after long period of error > 100%
      starting_integral_term: 0.5 # Reduce overshoot after reboot
      output_averaging_samples: 3 # smooth the output over 5 samples
      derivative_averaging_samples: 3 # smooth the derivative value over 10 samples
    ## Tunning parameters
    deadband_parameters:
      threshold_high: 0.10°C #### Deve ser 0,1 e -0,1??????
      threshold_low: -0.10°C
      # kp_multiplier: 0.5   # proportional gain turned off inside deadband
      # ki_multiplier: 0.5  # integral accumulates at only 5% of normal ki
      # kd_multiplier: 0.5   # derviative is turned off inside deadband
      # deadband_output_averaging_samples: 4


light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: 27
    num_leds: 25
    rgb_order: GRB
    color_correct: [50%, 50%, 50%] # The LED's on the Atom Matrix should not be run at full power
    id: status_led
    name: Light Panel
    effects:
      - random:
      - flicker:
      - addressable_rainbow:

binary_sensor:
  - platform: gpio
    pin:
      number: 39
      inverted: true
    name: Panel Button
    on_press:
      then:
        - light.toggle: status_led
  - platform: gpio
    pin:
      pcf8574: io_hub
      number: 7
      mode:
        input: true
      inverted: false
    name: "${name} Mixer Error"
    id: "${name}_mixer_error"
    device_class: problem
    icon: mdi:alert
  - platform: status # API Connectivity
    name: "${name} Status"
    device_class: connectivity